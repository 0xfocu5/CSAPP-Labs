#rsum.ys
#Execution begins at address 0
	.pos 0
	irmovq stack, %rsp    # set up stack pointer
	call main             # Execute main program
	halt				  # Terminate program


# Sample linked list
	.align 8
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:
	irmovq src, %rdi
	irmovq dest, %rsi
	irmovq $3, %rdx
	call copy_block         # copy_block(long *src, long *dest, long len)
	ret

copy_block:
	irmovq $1, %r13
	irmovq $8, %r14
	xorq %rax, %rax        # result = 0
	jmp loop1

loop:
	mrmovq 0(%rdi), %r12
	addq %r14, %rdi
	rmmovq %r12, (%rsi)
	addq %r14, %rsi
	xorq %r12, %rax
	subq %r13, %rdx
loop1:
	andq %rdx, %rdx
	jg loop
	ret

#Stack starts here and grows to lower addresses
	.pos 0x200
stack:
